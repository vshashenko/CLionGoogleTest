- Bug: CLionProjectReader.readSelectedTarget throws NPE when open a new project without .idea folder.
- Bug: Discover tests (N tests found), run X selected tests, change exe name to wrong, run all -- the message will be "X tests found" (should be still N).

- Remove word wrap from the error pane.
- If the gtest process crashes, write this to the run summary. Crashed process returns 139 on Linux, 0xC0000005 (signed int) on Windows.
- Problem: printf's in the test code doesn't appear in the console tab (ok on linux)
- An icon for the running state of a test.
- Show xml report content somewhere for debugging purpose.
- Tree icons for suites
- Improve icons
- Handle xml parsing errors.
- Add total progress indication while executing tests (based on prev. execution times?)
- Problem: discover tests, run selected test-suite, add another test to the suite, run selected again -- no new tests. So a discover before run is still better.
- Two run buttons: Run all, Run dropdown (selected, failed, not run)
- No horizontal scroll bar
- Show progress bar only after 500ms and/or not less than 1 ms.
- Go to the test source code on a tree item double click: implement without calling grep, support not only *.cpp.
- While using grep for the goto operation, use wait cursor.
- Stand-alone app in release
- Dropdown list to select gtest target
- Autodetect target with gtest
- Debug selected tests (runs with clion debugger command)
- Kill running gtest process on app/Clion exit.
- Filter window for the test tree
- Context menu for test tree items
- Try how the test window looks in the dark theme
- Intellij notifications about test run: tests failed, test succeeded.
- Save discovered tests between restart?


This is possible only after parsing the std output:
- Mark crashed test as failed in the test tree. Possible only if parse stdout. The xml report is empty if the process crashed.
- Add warnings to the result of a test and total number of warnings to the summary. Possible only if parse stdout.
  Warnings are not in xml file, only in the console output.
  An example:
[ RUN      ] StreamingTest.onStreamingHeartbeatReceivedInTime

GMOCK WARNING:
Uninteresting mock function call - returning directly.
    Function call: RecoverableError(@0x7f0e6ccd5270 "Unsupported type of entity received in JSON: {\"pois\":[],\"_timestamp\":\"1970-01-01T00:00:00.000Z\",\"_tag\":\"a85hYGBgzGDKBVIcJgsq3oVaXzyVwZTImMfK8EAk6DxfFgA=\",\"_type\":\"pois\"}")
Stack trace:

GMOCK WARNING:
Uninteresting mock function call - returning directly.
    Function call: RecoverableError(@0x7f0e6ccd5270 "Unsupported type of entity received in JSON: {\"tracks\":[],\"_timestamp\":\"1970-01-01T00:00:00.000Z\",\"_tag\":\"a85hYGBgzGDKBVIcq4689Q3NafqbwZTImMfKkCcWdJ4vCwA=\",\"_type\":\"tracks\"}")
Stack trace:
[       OK ] StreamingTest.onStreamingHeartbeatReceivedInTime (1542 ms)




Beyond the runner
=================

- Command to generate gtest test suite class. Seems JetBrains will do it.
